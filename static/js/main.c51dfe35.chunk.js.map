{"version":3,"sources":["csr.jpg","chalmers.png","Ericsson.png","components/Header.js","components/LeftItem.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","style","linkStyle","href","headerStyle","textStyle","Component","color","fontSize","fontWeight","margin","top","LeftItem","src","this","props","image","link","company","marginTop","end","city","description","csrLink","App","components_Header","components_LeftItem","Chalmers","Ericsson","csr","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6QCGlCC,gMAEF,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MAAIE,MAAOC,GAAWL,EAAAC,EAAAC,cAAA,KAAGI,KAAK,gDAAR,YAEzBN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACZH,EAAAC,EAAAC,cAAA,MAAIE,MAAOC,GAAX,mBAEJL,EAAAC,EAAAC,cAAA,WACFF,EAAAC,EAAAC,cAAA,MAAIE,MAAOG,GAAX,wBAEAP,EAAAC,EAAAC,cAAA,MAAIE,MAAOI,GAAX,sDAbWC,cAqBfF,EAAc,CAChBG,MAAO,OACPC,SAAU,OACVC,WAAY,UAGRJ,EAAY,CAChBE,MAAO,OACPC,SAAU,OACVC,WAAY,UAIVP,EAAY,CACdK,MAAO,OACPC,SAAU,OACVC,WAAY,SACZC,OAAQ,IACRC,IAAK,KAIMf,oBCtBAgB,0LAlBX,OACIf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKc,IAAKC,KAAKC,MAAMC,QACrBnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAACO,SAAS,KAAKX,EAAAC,EAAAC,cAAA,KAAGI,KAAMW,KAAKC,MAAME,MAAOH,KAAKC,MAAMG,UAChErB,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAACO,SAAS,GAAIW,UAAU,EAAGZ,MAAM,YAAaO,KAAKC,MAAMK,KACpEvB,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAACO,SAAS,GAAIW,UAAU,IAAKL,KAAKC,MAAMM,MACnDxB,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAACM,MAAM,YAAaO,KAAKC,MAAMO,uBAVtChB,+CCYjBiB,EAAU,qIA6BDC,mLAvBX,OACE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC0B,EAAD,MACA5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAC2B,EAAD,CAAUV,MAAOW,IAAUT,QAAQ,oCAAoCD,KAlB5D,gDAkB8EG,IAjB/E,gDAiBgGC,KAAK,aAAaC,YAhBvH,oQAiBLzB,EAAAC,EAAAC,cAAC2B,EAAD,CAAUV,MAAOY,IAAUV,QAAQ,WAAWD,KAfjC,8BAeqDG,IAd9D,8BAcwEC,KAAK,aAAaC,YAbxF,qiBAcNzB,EAAAC,EAAAC,cAAC2B,EAAD,CAAUV,MAAOa,IAAKX,QAAQ,qCAAkCD,KAAMM,EAASH,IAAI,0CAA0CC,KAAK,aAAaC,YAXzI,oOAYNzB,EAAAC,EAAAC,cAAC2B,EAAD,CAAUV,MAAOa,IAAKX,QAAQ,qCAAkCD,KAAMM,EAASH,IAAI,uCAAuCC,KAAK,aAAaC,YAXtI,oOACIhB,aCPEwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECXNC,IAASC,OAAOvC,EAAAC,EAAAC,cAACsC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c51dfe35.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/csr.f60a1e16.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chalmers.daa4ebfd.png\";","module.exports = __webpack_public_path__ + \"static/media/Ericsson.058ebbe4.png\";","import React, { Component } from 'react';\nimport '../Header.css';\n\nclass Header extends Component {\n    render() {\n    return (\n        <div className=\"Header\">\n            <div className=\"link\">\n                <h4 style={linkStyle}><a href=\"http://ortheden.com/Resume_JuliaOrtheden.pdf\">RESUME</a></h4>\n            </div>\n             <div className=\"logo\">\n                <h4 style={linkStyle}>JULIA ORTHEDEN</h4>\n            </div>\n            <div>\n          <h1 style={headerStyle}>Hey there, \n            I'm Julia</h1>\n          <h2 style={textStyle}> A Swedish software engineering student. </h2>\n        </div>\n        </div>\n        );\n\n    }\n}\n\nconst headerStyle = {\n    color: '#FFF',\n    fontSize: '60px',\n    fontWeight: 'normal',\n    //fontFamily: 'Helvetica'\n  }\n  const textStyle = {\n    color: '#FFF',\n    fontSize: '20px',\n    fontWeight: 'normal',\n    //fontStyle: 'italic',\n  }\n\nconst linkStyle = {\n    color: '#FFF',\n    fontSize: '20px',\n    fontWeight: 'normal',\n    margin: \"0\",\n    top: '0', \n    //fontStyle: 'italic',\n  }\n\nexport default Header;","import React, { Component } from 'react';\nimport '../LeftItem.css';\n\n\nclass LeftItem extends Component {\n    render(){\n    return (\n        <div>\n            <div className=\"TextBox\">\n                <img src={this.props.image} />\n                <div className=\"Text\">\n                    <h4 style={{fontSize:20}}><a href={this.props.link}>{this.props.company}</a></h4>\n                    <h5 style={{fontSize:15, marginTop:0, color:\"#2B7822\"}}>{this.props.end}</h5>\n                    <h5 style={{fontSize:15, marginTop:0}}>{this.props.city}</h5>\n                    <a style={{color:\"#606060\"}}>{this.props.description}</a>\n                 </div>\n            </div>  \n        </div>\n        );\n\n    }\n}\n\n\nexport default LeftItem;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Chalmers from './chalmers.png';\nimport LeftItem from './components/LeftItem';\nimport Ericsson from './Ericsson.png';\nimport csr from './csr.jpg';\n\nconst actualLink = \"https://www.chalmers.se/en/Pages/default.aspx\";\nconst graduation =\"M.Sc Software Engineering, expected B.Sc 2019\";\nconst text = \"During my three years in Chalmers I have really pushed my limits and challenged myself constantly. I have learned incredibly much and been surrounded by inspiring people. I prepare for my bachelor thesis which will be in the area of dynamic voice agents. \";\n\nconst ericssonLink = \"https://www.ericsson.com/en\";\nconst end = \"Summer Internship R&D, 2018\";\nconst eText = \"Half of the internship focused on learning and implementing new programs such as Prometheus to handle metrics and Elastic Stack to handle logs. The other half consisted of developing an application to handle internal process ratings. From database structure to user interaction. An application which I will continue to develop besides my studies this autumn.During the internship I greatly improved my overall understanding of the process of building an application from scratch to deployment and to absorb and implement new techniques quickly.\"\n\nconst csrLink = \"https://chalmersrekrytering.se/?gclid=Cj0KCQiA3b3gBRDAARIsAL6D-N-cXgKWqYsEleLjdxuQplCMZmVLuM9gqOuNx9oo_JVHkJJhVin124caArcuEALw_wcB\";\nconst sText = \"Developed and maintained the website and the internal IT-system within an already existing code base in a team of two. I challenged myself constantly since web development, servers and databases were all new subjects to me.\";\nconst pText = \"I managed my own recruitment projects from first contact with companies to the interviews with potential candidates. I greatly improved my communication skills and learned a lot about different business structures.\";\nclass App extends Component {\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"Content\">\n        <LeftItem image={Chalmers} company=\"Chalmers University of Technology\" link={actualLink} end={graduation} city=\"Gothenburg\" description={text} />\n        <LeftItem image={Ericsson} company=\"Ericsson\" link={ericssonLink} end={end} city=\"Gothenburg\" description={eText} />\n        <LeftItem image={csr} company=\"Chalmers Studentkår Rekrytering\" link={csrLink} end=\"Software developer, part-time 2017-2018\" city=\"Gothenburg\" description={sText} />\n        <LeftItem image={csr} company=\"Chalmers Studentkår Rekrytering\" link={csrLink} end=\"Project manager, part-time 2016-2017\" city=\"Gothenburg\" description={pText} />\n      </div>\n      </div>\n    );\n  }\n}\n\n\nconst linkStyle = {\n  color: '#FFF',\n  fontSize: '20px',\n  fontWeight: 'normal',\n  margin: \"0\",\n  top: '0', \n  //fontStyle: 'italic',\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}